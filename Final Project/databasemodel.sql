-- MySQL Script generated by MySQL Workbench
-- Fri Jul 10 13:30:00 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
-- SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- DROP DATABASE StoreDB;
-- CREATE DATABASE StoreDB;
-- USE StoreDB;
-- -----------------------------------------------------
-- Table `businessOwner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `businessOwner` ;

CREATE TABLE IF NOT EXISTS `businessOwner` (
  `business_owner_id` TINYINT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`business_owner_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `company` ;

CREATE TABLE IF NOT EXISTS `company` (
  `company_id` TINYINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`company_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ownership`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ownership` ;

CREATE TABLE IF NOT EXISTS `ownership` (
  `ownership_id` TINYINT NOT NULL,
  `company_id` TINYINT NOT NULL,
  `business_owner_id` TINYINT NOT NULL,
  INDEX `fk_ownership_company_idx` (`company_id` ASC) VISIBLE,
  PRIMARY KEY (`ownership_id`),
  CONSTRAINT `fk_ownership_businessOwner`
    FOREIGN KEY (`ownership_id`)
    REFERENCES `businessOwner` (`business_owner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ownership_company`
    FOREIGN KEY (`company_id`)
    REFERENCES `company` (`company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `department` ;

CREATE TABLE IF NOT EXISTS `department` (
  `department_id` TINYINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`department_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `store` ;

CREATE TABLE IF NOT EXISTS `store` (
  `store_id` TINYINT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`store_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `warehouse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `warehouse` ;

CREATE TABLE IF NOT EXISTS `warehouse` (
  `warehouse_id` TINYINT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`warehouse_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `composition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `composition` ;

CREATE TABLE IF NOT EXISTS `composition` (
  `composition_id` TINYINT NOT NULL,
  `company_id` TINYINT NOT NULL,
  `department_id` TINYINT NOT NULL,
  `store_id` TINYINT NOT NULL,
  `warehouse_id` TINYINT NOT NULL,
  PRIMARY KEY (`composition_id`),
  INDEX `fk_composition_company_idx` (`company_id` ASC) VISIBLE,
  INDEX `fk_composition_department_idx` (`department_id` ASC) VISIBLE,
  INDEX `fk_composition_store_idx` (`store_id` ASC) VISIBLE,
  INDEX `fk_composition_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_composition_company`
    FOREIGN KEY (`company_id`)
    REFERENCES `company` (`company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_composition_department`
    FOREIGN KEY (`department_id`)
    REFERENCES `department` (`department_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_composition_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_composition_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `person` ;

CREATE TABLE IF NOT EXISTS `person` (
  `SSN` CHAR(9) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `dob` DATETIME NOT NULL,
  `date_joined` DATETIME NOT NULL,
  `is_supervisor` VARCHAR(10) NOT NULL,
  `comapny_id` TINYINT NULL,
  PRIMARY KEY (`SSN`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_person_company_idx` (`comapny_id` ASC) VISIBLE,
  CONSTRAINT `fk_person_company`
    FOREIGN KEY (`comapny_id`)
    REFERENCES `company` (`company_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dependent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dependent` ;

CREATE TABLE IF NOT EXISTS `dependent` (
  `dependent_id` TINYINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`dependent_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `relation` ;

CREATE TABLE IF NOT EXISTS `relation` (
  `relationship_id` TINYINT NOT NULL,
  `SSN` CHAR(9) NOT NULL,
  `dependent_id` TINYINT NOT NULL,
  PRIMARY KEY (`relationship_id`),
  INDEX `fk_relation_person_idx` (`SSN` ASC) VISIBLE,
  INDEX `fk_relation_dependent_idx` (`dependent_id` ASC) VISIBLE,
  CONSTRAINT `fk_relation_person`
    FOREIGN KEY (`SSN`)
    REFERENCES `person` (`SSN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_relation_dependent`
    FOREIGN KEY (`dependent_id`)
    REFERENCES `dependent` (`dependent_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supervisor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `supervisor` ;

CREATE TABLE IF NOT EXISTS `supervisor` (
  `supervisor_id` TINYINT NOT NULL,
  `SSN` CHAR(9) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `department_id` TINYINT NULL,
  PRIMARY KEY (`supervisor_id`, `SSN`),
  INDEX `fk_supervisor_person_idx` (`SSN` ASC) VISIBLE,
  INDEX `fk_supervisor_department_idx` (`department_id` ASC) VISIBLE,
  CONSTRAINT `fk_supervisor_person`
    FOREIGN KEY (`SSN`)
    REFERENCES `person` (`SSN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_supervisor_department`
    FOREIGN KEY (`department_id`)
    REFERENCES `department` (`department_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `regularEmployee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `regularEmployee` ;

CREATE TABLE IF NOT EXISTS `regularEmployee` (
  `employee_id` TINYINT NOT NULL,
  `SSN` CHAR(9) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `department_id` TINYINT NULL,
  `store_id` TINYINT NULL,
  `warehouse_id` TINYINT NULL,
  PRIMARY KEY (`employee_id`, `SSN`),
  INDEX `fk_regularEmployee_person_idx` (`SSN` ASC) VISIBLE,
  INDEX `fk_regularEmployee_department_idx` (`department_id` ASC) VISIBLE,
  INDEX `fk_regularEmployee_store_idx` (`store_id` ASC) VISIBLE,
  INDEX `fk_regularEmployee_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_regularEmployee_person`
    FOREIGN KEY (`SSN`)
    REFERENCES `person` (`SSN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_regularEmployee_department`
    FOREIGN KEY (`department_id`)
    REFERENCES `department` (`department_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_regularEmployee_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_regularEmployee_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `manager` ;

CREATE TABLE IF NOT EXISTS `manager` (
  `manager_id` TINYINT NOT NULL,
  `SSN` CHAR(9) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`manager_id`, `SSN`),
  INDEX `fk_manager_person_idx` (`SSN` ASC) VISIBLE,
  CONSTRAINT `fk_manager_person`
    FOREIGN KEY (`SSN`)
    REFERENCES `person` (`SSN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `management`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `management` ;

CREATE TABLE IF NOT EXISTS `management` (
  `management_id` TINYINT NOT NULL,
  `manager_id` TINYINT NOT NULL,
  `department_id` TINYINT NOT NULL,
  `store_id` TINYINT NOT NULL,
  `warehouse_id` TINYINT NOT NULL,
  PRIMARY KEY (`management_id`),
  INDEX `fk_management_manager_idx` (`manager_id` ASC) VISIBLE,
  INDEX `fk_management_department_idx` (`department_id` ASC) VISIBLE,
  INDEX `fk_management_store_idx` (`store_id` ASC) VISIBLE,
  INDEX `fk_management_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_management_manager`
    FOREIGN KEY (`manager_id`)
    REFERENCES `manager` (`manager_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_management_department`
    FOREIGN KEY (`department_id`)
    REFERENCES `department` (`department_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_management_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_management_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supplier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `supplier` ;

CREATE TABLE IF NOT EXISTS `supplier` (
  `supplier_id` TINYINT NOT NULL,
  `company_name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`supplier_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `logisticProvider`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `logisticProvider` ;

CREATE TABLE IF NOT EXISTS `logisticProvider` (
  `logistic_provider_id` TINYINT NOT NULL,
  `company_name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `store_id` TINYINT NULL,
  `warehouse_id` TINYINT NULL,
  PRIMARY KEY (`logistic_provider_id`),
  INDEX `fk_logisticProvider_store_idx` (`store_id` ASC) VISIBLE,
  INDEX `fk_logisticProvider_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_logisticProvider_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_logisticProvider_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `request` ;

CREATE TABLE IF NOT EXISTS `request` (
  `request_id` TINYINT NOT NULL,
  `manager_id` TINYINT NOT NULL,
  `supplier_id` TINYINT NOT NULL,
  PRIMARY KEY (`request_id`),
  INDEX `fk_request_manager_idx` (`manager_id` ASC) VISIBLE,
  INDEX `fk_request_supplier_idx` (`supplier_id` ASC) VISIBLE,
  CONSTRAINT `fk_request_manager`
    FOREIGN KEY (`manager_id`)
    REFERENCES `manager` (`manager_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_request_supplier`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `supplier` (`supplier_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `designate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `designate` ;

CREATE TABLE IF NOT EXISTS `designate` (
  `designation_id` TINYINT NOT NULL,
  `supplier_id` TINYINT NOT NULL,
  `logistic_provider_id` TINYINT NOT NULL,
  PRIMARY KEY (`designation_id`),
  INDEX `fk_designate_supplier_idx` (`supplier_id` ASC) VISIBLE,
  INDEX `fk_designate_logisticProvider_idx` (`logistic_provider_id` ASC) VISIBLE,
  CONSTRAINT `fk_designate_supplier`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `supplier` (`supplier_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_designate_logisticProvider`
    FOREIGN KEY (`logistic_provider_id`)
    REFERENCES `logisticProvider` (`logistic_provider_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `customer` ;

CREATE TABLE IF NOT EXISTS `customer` (
  `customer_id` TINYINT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `shipping_address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`customer_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `onlineStore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `onlineStore` ;

CREATE TABLE IF NOT EXISTS `onlineStore` (
  `URL` VARCHAR(255) NOT NULL,
  `bestseller` VARCHAR(255) NULL,
  `store_id` TINYINT NOT NULL,
  PRIMARY KEY (`URL`, `store_id`),
  INDEX `fk_onlineStore_store_idx` (`store_id` ASC) VISIBLE,
  CONSTRAINT `fk_onlineStore_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `loginAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `loginAccount` ;

CREATE TABLE IF NOT EXISTS `loginAccount` (
  `account_id` TINYINT NOT NULL,
  `customer_id` TINYINT NOT NULL,
  `URL` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`account_id`),
  INDEX `fk_loginAccount_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_loginAccount_onlineStore_idx` (`URL` ASC) VISIBLE,
  CONSTRAINT `fk_loginAccount_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_loginAccount_onlineStore`
    FOREIGN KEY (`URL`)
    REFERENCES `onlineStore` (`URL`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checkOut`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `checkOut` ;

CREATE TABLE IF NOT EXISTS `checkOut` (
  `check_out_id` TINYINT NOT NULL,
  `total` DECIMAL(6,2) NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`check_out_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `products` ;

CREATE TABLE IF NOT EXISTS `products` (
  `product_id` TINYINT NOT NULL,
  `product_name` VARCHAR(45) NOT NULL,
  `product_SKU` VARCHAR(45) NOT NULL,
  `check_out_id` TINYINT NULL,
  PRIMARY KEY (`product_id`, `product_SKU`),
  INDEX `fk_products_checkOut_idx` (`check_out_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_checkOut`
    FOREIGN KEY (`check_out_id`)
    REFERENCES `checkOut` (`check_out_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `orderProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `orderProduct` ;

CREATE TABLE IF NOT EXISTS `orderProduct` (
  `order_id` TINYINT NOT NULL,
  `product_id` TINYINT NOT NULL,
  `customer_id` TINYINT NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_order_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_order_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_order_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoppingCart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `shoppingCart` ;

CREATE TABLE IF NOT EXISTS `shoppingCart` (
  `cart_id` TINYINT NOT NULL,
  `tax` DECIMAL(6,2) NOT NULL,
  `date_added` DATETIME NOT NULL,
  `warehouse_id` TINYINT NULL,
  PRIMARY KEY (`cart_id`),
  INDEX `fk_shoppingCart_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `fk_shoppingCart_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `contain`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `contain` ;

CREATE TABLE IF NOT EXISTS `contain` (
  `contain_id` TINYINT NOT NULL,
  `product_id` TINYINT NOT NULL,
  `cart_id` TINYINT NOT NULL,
  `date_added` DATETIME NOT NULL,
  PRIMARY KEY (`contain_id`),
  INDEX `fk_add_products_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_add_shoppingCart_idx` (`cart_id` ASC) VISIBLE,
  CONSTRAINT `fk_add_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_add_shoppingCart`
    FOREIGN KEY (`cart_id`)
    REFERENCES `shoppingCart` (`cart_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `paymentType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `paymentType` ;

CREATE TABLE IF NOT EXISTS `paymentType` (
  `payment_type_id` TINYINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`payment_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `billingInfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `billingInfo` ;

CREATE TABLE IF NOT EXISTS `billingInfo` (
  `billing_id` TINYINT NOT NULL,
  `customer_id` TINYINT NOT NULL,
  `payment_type_id` TINYINT NOT NULL,
  `amount` DECIMAL(6,2) NOT NULL,
  PRIMARY KEY (`billing_id`),
  INDEX `fk_billingInfo_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_billingInfo_paymentType_idx` (`payment_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_billingInfo_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_billingInfo_paymentType`
    FOREIGN KEY (`payment_type_id`)
    REFERENCES `paymentType` (`payment_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditCard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditCard` ;

CREATE TABLE IF NOT EXISTS `creditCard` (
  `card_number` TINYINT NOT NULL,
  `payment_type_id` TINYINT NOT NULL,
  `expiration_date` DATETIME NOT NULL,
  `cvv` CHAR(3) NOT NULL,
  `bank` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`card_number`, `payment_type_id`),
  INDEX `fk_creditCard_paymentType_idx` (`payment_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_creditCard_paymentType`
    FOREIGN KEY (`payment_type_id`)
    REFERENCES `paymentType` (`payment_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bankAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bankAccount` ;

CREATE TABLE IF NOT EXISTS `bankAccount` (
  `account_number` TINYINT NOT NULL,
  `payment_type_id` TINYINT NOT NULL,
  `bank` VARCHAR(45) NOT NULL,
  `rounting_number` INT NOT NULL,
  PRIMARY KEY (`account_number`, `payment_type_id`),
  INDEX `fk_bankAccount_paymentType_idx` (`payment_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_bankAccount_paymentType`
    FOREIGN KEY (`payment_type_id`)
    REFERENCES `paymentType` (`payment_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shippingCompany`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `shippingCompany` ;

CREATE TABLE IF NOT EXISTS `shippingCompany` (
  `shipping_company_id` TINYINT NOT NULL,
  `phone_number` VARCHAR(20) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`shipping_company_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `arrangement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `arrangement` ;

CREATE TABLE IF NOT EXISTS `arrangement` (
  `arrangement_id` TINYINT NOT NULL,
  `warehouse_id` TINYINT NOT NULL,
  `shipping_company_id` TINYINT NOT NULL,
  PRIMARY KEY (`arrangement_id`),
  INDEX `fk_arrangement_warehouse_idx` (`warehouse_id` ASC) VISIBLE,
  INDEX `fk_arrangement_shippingCompany_idx` (`shipping_company_id` ASC) VISIBLE,
  CONSTRAINT `fk_arrangement_warehouse`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `warehouse` (`warehouse_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_arrangement_shippingCompany`
    FOREIGN KEY (`shipping_company_id`)
    REFERENCES `shippingCompany` (`shipping_company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `delivery`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `delivery` ;

CREATE TABLE IF NOT EXISTS `delivery` (
  `delivery_id` TINYINT NOT NULL,
  `shipping_company_id` TINYINT NOT NULL,
  `customer_id` TINYINT NOT NULL,
  `delivery_date` DATETIME NOT NULL,
  PRIMARY KEY (`delivery_id`),
  INDEX `fk_delivery_shippingCompany_idx` (`shipping_company_id` ASC) VISIBLE,
  INDEX `fk_delivery_customer_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_delivery_shippingCompany`
    FOREIGN KEY (`shipping_company_id`)
    REFERENCES `shippingCompany` (`shipping_company_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_delivery_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `customer` (`customer_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brickmortarStore`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `brickmortarStore` ;

CREATE TABLE IF NOT EXISTS `brickmortarStore` (
  `bm_id` TINYINT(1) NOT NULL,
  `store_id` TINYINT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`bm_id`, `store_id`),
  INDEX `fk_brick&mortarStore_store_idx` (`store_id` ASC) VISIBLE,
  CONSTRAINT `fk_brick&mortarStore_store`
    FOREIGN KEY (`store_id`)
    REFERENCES `store` (`store_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `storage` ;

CREATE TABLE IF NOT EXISTS `storage` (
  `storage_id` TINYINT NOT NULL,
  `bm_id` TINYINT NOT NULL,
  `product_id` TINYINT NOT NULL,
  `product_SKU` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`storage_id`),
  INDEX `fk_storage_products_idx` (`product_id` ASC, `product_SKU` ASC) VISIBLE,
  INDEX `fk_storage_brick&mortarStore_idx` (`bm_id` ASC) VISIBLE,
  CONSTRAINT `fk_storage_products`
    FOREIGN KEY (`product_id` , `product_SKU`)
    REFERENCES `products` (`product_id` , `product_SKU`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_storage_brick&mortarStore`
    FOREIGN KEY (`bm_id`)
    REFERENCES `brickmortarStore` (`bm_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditBureau`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditBureau` ;

CREATE TABLE IF NOT EXISTS `creditBureau` (
  `credit_bureau_id` TINYINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`credit_bureau_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `creditVerification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `creditVerification` ;

CREATE TABLE IF NOT EXISTS `creditVerification` (
  `verification_id` TINYINT NOT NULL,
  `check_out_id` TINYINT NOT NULL,
  `credit_bureau_id` TINYINT NOT NULL,
  PRIMARY KEY (`verification_id`),
  INDEX `fk_creditVerification_checkOut_idx` (`check_out_id` ASC) VISIBLE,
  INDEX `fk_creditVerification_creditBureau_idx` (`credit_bureau_id` ASC) VISIBLE,
  CONSTRAINT `fk_creditVerification_checkOut`
    FOREIGN KEY (`check_out_id`)
    REFERENCES `checkOut` (`check_out_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_creditVerification_creditBureau`
    FOREIGN KEY (`credit_bureau_id`)
    REFERENCES `creditBureau` (`credit_bureau_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `image`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `image` ;

CREATE TABLE IF NOT EXISTS `image` (
  `image_id` TINYINT NOT NULL,
  `size` INT NOT NULL,
  `image_path` VARCHAR(255) NOT NULL,
  `product_id` TINYINT NOT NULL,
  PRIMARY KEY (`image_id`),
  INDEX `pk_image_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `pk_image_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `review` ;

CREATE TABLE IF NOT EXISTS `review` (
  `review_id` TINYINT NOT NULL,
  `review_date` DATETIME NOT NULL,
  `review_by` VARCHAR(45) NULL,
  `product_id` TINYINT NOT NULL,
  PRIMARY KEY (`review_id`),
  INDEX `fk_review_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_review_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productSpecification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `productSpecification` ;

CREATE TABLE IF NOT EXISTS `productSpecification` (
  `specs_id` TINYINT NOT NULL,
  `model` VARCHAR(45) NULL,
  `name` VARCHAR(45) NOT NULL,
  `product_id` TINYINT NOT NULL,
  PRIMARY KEY (`specs_id`),
  INDEX `fk_productSpecification_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_productSpecification_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `products` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `supervision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `supervision` ;

CREATE TABLE IF NOT EXISTS `supervision` (
  `SSN` CHAR(9) NOT NULL,
  `supervision_id` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`SSN`),
  CONSTRAINT `fk_supervision_person`
    FOREIGN KEY (`SSN`)
    REFERENCES `person` (`SSN`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
